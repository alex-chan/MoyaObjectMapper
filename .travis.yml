language: objective-c
osx_image: xcode8.2

cache:
  directories:
  - Carthage

env:
  global:
    - FRAMEWORK_NAME=MoyaModelMapper
    - XCODE_PROJECT=MoyaModelMapper.xcodeproj
    - IOS_FRAMEWORK_SCHEME="MoyaModelMapper-iOS"
    - MACOS_FRAMEWORK_SCHEME="MoyaModelMapper-macOS"
    - TVOS_FRAMEWORK_SCHEME="MoyaModelMapper-tvOS"
    - WATCHOS_FRAMEWORK_SCHEME="MoyaModelMapper-watchOS"
    - IOS_SDK=iphonesimulator10.2
    - MACOS_SDK=macosx10.12
    - TVOS_SDK=appletvsimulator10.1
    - WATCHOS_SDK=watchsimulator3.1
    - BUILD_ARCHS="x86_64"
  matrix:
    - DESTINATION="OS=3.1,name=Apple Watch - 42mm"                 SCHEME="$WATCHOS_FRAMEWORK_SCHEME"   SDK="$WATCHOS_SDK"   RUN_TESTS="NO"    POD_LINT="NO"
    - DESTINATION="OS=3.1,name=Watch Series 2 - 42mm"              SCHEME="$WATCHOS_FRAMEWORK_SCHEME"   SDK="$WATCHOS_SDK"   RUN_TESTS="NO"    POD_LINT="NO"

    - DESTINATION="platform=iOS Simulator,OS=10.1,name=iPhone 7"   SCHEME="$IOS_FRAMEWORK_SCHEME"       SDK="$IOS_SDK"       RUN_TESTS="YES"   POD_LINT="YES"
    - DESTINATION="platform=iOS Simulator,OS=9.0,name=iPhone 6"    SCHEME="$IOS_FRAMEWORK_SCHEME"       SDK="$IOS_SDK"       RUN_TESTS="YES"   POD_LINT="NO"

    - DESTINATION="OS=10.0,name=Apple TV 1080p"                    SCHEME="$TVOS_FRAMEWORK_SCHEME"      SDK="$TVOS_SDK"      RUN_TESTS="YES"   POD_LINT="NO"
    - DESTINATION="OS=9.0,name=Apple TV 1080p"                     SCHEME="$TVOS_FRAMEWORK_SCHEME"      SDK="$TVOS_SDK"      RUN_TESTS="YES"   POD_LINT="NO"

    - DESTINATION="platform=OS X,arch=x86_64"                      SCHEME="$MACOS_FRAMEWORK_SCHEME"     SDK="$MACOS_SDK"     RUN_TESTS="YES"   POD_LINT="NO"

before_install:
  - brew update
  # Cocoapod
  - brew install cocoapods || brew upgrade cocoapods
  # Carthage tools
  - brew install carthage || brew upgrade carthage
  - curl -L -O https://github.com/YPlan/CartfileDiff/releases/download/0.1/CartfileDiff.pkg
  - sudo installer -pkg CartfileDiff.pkg -target /
  # xcpretty
  - gem install xcpretty

before_script:
  # bootstrap the dependencies for the project
  # you can remove if you don't have dependencies
  - if [[ $SCHEME == $IOS_FRAMEWORK_SCHEME ]];then
      export PLATFORM=iOS;
    elif [[ $SCHEME == $MACOS_FRAMEWORK_SCHEME ]];then
      export PLATFORM=macOS;
    elif [[ $SCHEME == $TVOS_FRAMEWORK_SCHEME ]];then
      export PLATFORM=tvOS;
    else
        export PLATFORM=watchOS;
    fi
  - PLATFORM=$PLATFORM ./scripts/bootstrap-if-needed

script:
  - set -o pipefail
  - xcodebuild -version
  - xcodebuild -showsdks

  # Build Framework in Debug and Run Tests if specified
  - echo "BUILD FOR DEBUG"
  - if [ $RUN_TESTS == "YES" ]; then
      xcodebuild -project "$XCODE_PROJECT" -scheme "$SCHEME" -sdk "$SDK" -destination "$DESTINATION" -configuration Debug ARCHS="$BUILD_ARCHS" ONLY_ACTIVE_ARCH=NO ENABLE_TESTABILITY=YES test | xcpretty;
    else
      xcodebuild -project "$XCODE_PROJECT" -scheme "$SCHEME" -sdk "$SDK" -destination "$DESTINATION" -configuration Debug ARCHS="$BUILD_ARCHS" ONLY_ACTIVE_ARCH=NO build | xcpretty;
    fi

  # Build Framework in Release and Run Tests if specified
  - echo "BUILD FOR RELEASE"
  - if [ $RUN_TESTS == "YES" ]; then
      xcodebuild -project "$XCODE_PROJECT" -scheme "$SCHEME" -sdk "$SDK" -destination "$DESTINATION" -configuration Release ARCHS="$BUILD_ARCHS" ONLY_ACTIVE_ARCH=NO ENABLE_TESTABILITY=YES test | xcpretty;
    else
      xcodebuild -project "$XCODE_PROJECT" -scheme "$SCHEME" -sdk "$SDK" -destination "$DESTINATION" -configuration Release ARCHS="$BUILD_ARCHS" ONLY_ACTIVE_ARCH=NO build | xcpretty;
    fi

  # Run `pod lib lint` if specified
  #- if [ $POD_LINT == "YES" ]; then
  #    pod lib lint;
  #  fi

after_success:
  - if [[ $XCODE_SDK == "macosx10.12" ]];then
      bash <(curl -s https://codecov.io/bash)
    fi

#before_deploy:
#  - carthage build --no-skip-current
#  - carthage archive $FRAMEWORK_NAME
